ui <- fluidPage(
# Application title
titlePanel("Old Faithful Geyser Data"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
)
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Old Faithful Geyser Data"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
)
server <- function(input, output) {
output$distPlot <- renderPlot({
# generate bins based on input$bins from ui.R
x    <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$bins + 1)
# draw the histogram with the specified number of bins
hist(x, breaks = bins, col = 'darkgray', border = 'white')
})
}
# Run the application
shinyApp(ui = ui, server = server)
getwd();
setwd("C:/Users/gupta/DataMiningProject")
data<-read.csv(file="app_metadata_cleaned.csv", header=TRUE)
summary(data)
data$CATEGORY <- as.factor(data$CATEGORY)
data$PRICE <- as.numeric(data$PRICE)
data$CONTENT_RATING <- as.factor(data$CONTENT_RATING)
data$DOWNLOAD_MIN <- as.numeric(data$DOWNLOAD_MIN)
data$DOWNLOAD_MAX <- as.numeric(data$DOWNLOAD_MAX)
data$SIZE_MEGABYTES <- as.numeric(data$SIZE_MEGABYTES)
data$MIN_REQ_ANDROID_FIRST <- as.factor(data$MIN_REQ_ANDROID_FIRST)
data$TOTAL_REVIEWS <- as.numeric(data$TOTAL_REVIEWS)
data$AVERAGE_RATING <- as.numeric(data$AVERAGE_RATING)
data$X5RATING <- as.numeric(data$X5RATING)
data$X4RATING <- as.numeric(data$X4RATING)
data$X3RATING <- as.numeric(data$X3RATING)
data$X2RATING <- as.numeric(data$X2RATING)
data$X1RATING <- as.numeric(data$X1RATING)
data$spam <- as.factor(data$spam)
library(mice)
install.packages("mice")
library(mice)
num.vars <- sapply(data, is.numeric)
data[num.vars] <- lapply(data[num.vars], scale)
Data <- data
Data$APP_ID <- NULL
Data$APP_NAME <- NULL
Data$DOWNLOADS <- NULL
Data$CURRENT_VERSION <- NULL
Data$LASTUPDATED <- NULL
Data$DEVELOPER_SITE <- NULL
Data$DEVELOPER_CONTACT <- NULL
Data$DEVELOPER_NAME <- NULL
Data$MIN_REQUIRED_ANDROID <- NULL
set.seed(123457)
library(dummies)
Data <- dummy.data.frame(Data, sep = ".", names = c("CATEGORY","CONTENT_RATING","MIN_REQ_ANDROID_FIRST"))
train <- sample(nrow(Data), .7 * nrow(Data))
df_train <- Data[train,]
df_validation <- Data[-train, ]
train_input <- as.matrix(df_train[,-15])
train_output <- as.vector(df_train[,15])
validate_input <- as.matrix(df_validation[,-15])
set.seed(12345)
library(shiny)
library(dummies)
library(ggplot2)
library(caret)
## Loading required package: lattice
library(MASS)
library(tree)
library(ISLR)
library(cluster)
library(fpc)
library(arules)
library(arulesViz)
km.out<-kmans(Data,5, nstart=20)
km.out<-kmeans(Data,5, nstart=20)
km.out$centers
Data2$Cluster<-km.out$cluster
Data2<-Data
Data2$Cluster<-km.out$cluster
tab<-table(Data2$spam, Data2$Cluster)
tab
barplot(as.matrix(tab)/sum(tab),col=c('black'),ylim=c(0, 0.90), main="Barchart of spams in each cluster", xlab="Cluster", ylab="Probability")
Data2$spam<-NULL
tab<-table(Data$spam, Data2$Cluster)
tab
metadta_knn<-function(k,ns){
km.out<-kmeans(Data,k, nstart=ns)
km.out$centers
Data2<-Data
Data2$spam<-NULL
Data2$Cluster<-km.out$cluster
tab<-table(Data$spam, Data2$Cluster)
tab
dataframe_tab<-data.frame(tab, names=c("SPAM","CLUSTER")) dataframe_tab<-data.frame(tab) nrow(dataframe_tab)
dataframe_tab<-data.frame(tab, names=c("SPAM","CLUSTER"))
dataframe_tab<-data.frame(tab)
nrow(dataframe_tab)
barplot(as.matrix(tab)/sum(tab),col=c('black'),ylim=c(0, 0.90), main="Barchart of spams in each cluster", xlab="Cluster", ylab="Probability")
ggplot(Data, aes(DOWNLOAD_MIN, PRICE, color = spam)) + geom_point()
barplot(as.matrix(tab)/sum(tab),col=c('black'),ylim=c(0, 0.90), main="Barchart of spams in each cluster", xlab="Cluster", ylab="Probability")
tab<-table(Data$spam, Data2$Cluster)
tab
barplot(as.matrix(tab)/sum(tab),col=c('black'),ylim=c(0, 0.90), main="Barchart of spams in each cluster", xlab="Cluster", ylab="Probability")
metadta_knn<-function(k,ns){
km.out<-kmeans(Data,k, nstart=ns)
km.out$centers
Data2<-Data
Data2$spam<-NULL
Data2$Cluster<-km.out$cluster
tab<-table(Data$spam, Data2$Cluster)
tab
dataframe_tab<-data.frame(tab, names=c("SPAM","CLUSTER"))
dataframe_tab<-data.frame(tab)
nrow(dataframe_tab)
plot(Data2, col =(km.out$cluster +1) , main="K-Means result", pch=20, cex=k)
barplot(as.matrix(tab)/sum(tab),col=c('black'),ylim=c(0, 0.90), main="Barchart of spams in each cluster", xlab="Cluster", ylab="Probability") #distribution of spam apps across clusters
}
metadata_knn(5,100)
metadata_knn<-function(k,ns){
km.out<-kmeans(Data,k, nstart=ns)
km.out$centers
Data2<-Data
Data2$spam<-NULL
Data2$Cluster<-km.out$cluster
tab<-table(Data$spam, Data2$Cluster)
tab
dataframe_tab<-data.frame(tab, names=c("SPAM","CLUSTER"))
dataframe_tab<-data.frame(tab)
nrow(dataframe_tab)
plot(Data2, col =(km.out$cluster +1) , main="K-Means result", pch=20, cex=k)
barplot(as.matrix(tab)/sum(tab),col=c('black'),ylim=c(0, 0.90), main="Barchart of spams in each cluster", xlab="Cluster", ylab="Probability") #distribution of spam apps across clusters
}
metadata_knn(5,100)
metadata_knn<-function(k,ns){
km.out<-kmeans(Data,k, nstart=ns)
km.out$centers
Data2<-Data
Data2$spam<-NULL
Data2$Cluster<-km.out$cluster
tab<-table(Data$spam, Data2$Cluster)
tab
dataframe_tab<-data.frame(tab, names=c("SPAM","CLUSTER"))
dataframe_tab<-data.frame(tab)
nrow(dataframe_tab)
#plot(Data2, col =(km.out$cluster +1) , main="K-Means result", pch=20, cex=k)
barplot(as.matrix(tab)/sum(tab),col=c('black'),ylim=c(0, 0.90), main="Barchart of spams in each cluster", xlab="Cluster", ylab="Probability") #distribution of spam apps across clusters
}
metadata_knn(5,100)
wss <- (nrow(Data2)-1)*sum(apply(Data2,2,var))
wss <- (nrow(Data2)-1)*sum(apply(Data2,2,var))
metadata_knn<-function(k,ns){
km.out<-kmeans(Data,k, nstart=ns)
km.out$centers
Data2<-Data
Data2$spam<-NULL
Data2$Cluster<-km.out$cluster
tab<-table(Data$spam, Data2$Cluster)
tab
dataframe_tab<-data.frame(tab, names=c("SPAM","CLUSTER"))
dataframe_tab<-data.frame(tab)
nrow(dataframe_tab)
#plot(Data2, col =(km.out$cluster +1) , main="K-Means result", pch=20, cex=k)
barplot(as.matrix(tab)/sum(tab),col=c('black'),ylim=c(0, 0.90), main="Barchart of spams in each cluster", xlab="Cluster", ylab="Probability") #distribution of spam apps across clusters
}
for( i in 2:15){
metadata_knn(i,180)
}
wss <- (nrow(Data2)-1)*sum(apply(Data2,2,var))
for(i in 2: 15){
wss[i] <- sum(kmeans(Data2,centers=i)$withinss)
metadata_knn(i,170)
}
wss <- (nrow(Data2)-1)*sum(apply(Data2,2,var))
for(i in 2: 15){
wss[i] <- sum(kmeans(Data2,centers=i)$withinss)
}
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method",
pch=20, cex=2)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method",
pch=20, cex=2)
wss <- (nrow(Data2)-1)*sum(apply(Data2,2,var))
for(i in 2: 15){
wss[i] <- sum(kmeans(Data2,centers=i)$withinss)
}
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method",
pch=20, cex=2)
metadata_knn(8,180)
plot(Data2, col =(km2$cluster +1) , main="K-Means result with 8 clusters", pch=20, cex=2)
plot(Data2, col =(metadata_knn(8,180)$cluster +1) , main="K-Means result with 8 clusters", pch=20, cex=2)
set.seed(7)
km2 = kmeans(Data2, 6, nstart=100)
plot(Data2, col =(km2$cluster +1) , main="K-Means result with 8 clusters", pch=20, cex=2)
set.seed(7)
km2 = kmeans(Data2, 8, nstart=180)
plot(Data2, col =(km2$cluster +1) , main="K-Means result with 8 clusters", pch=20, cex=2)
par(mar = rep(2, 4))
plot(Data2, col =(km2$cluster +1) , main="K-Means result with 8 clusters", pch=20, cex=2)
